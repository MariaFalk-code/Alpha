@using WebApp.Models.ViewModels
@model List<WebApp.Models.ViewModels.ProjectCard>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Dashboard";
}
<div class="flex items-center pb-4">
    <h1 class="text-3xl font-bold text-slate-950 dark:text-white">
        Projects
    </h1>
    <div class="ml-auto">
        <button data-dialog-target="add-project-dialog"
                class="btn-primary px-6"
                type="button">
            <i class="fa-solid fa-plus mr-1.5"></i>
            Add Project
        </button>
    </div>
</div>
<div>
    @await Html.PartialAsync("_NavProjects")
</div>

@if (Model != null && Model.Any())
{
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-8 pt-8 overflow-y-auto">
        @foreach (var project in Model)
        {
            @await Html.PartialAsync("_ProjectCard", project)
        }
    </div>
}
else
{
    <div class="text-center text-slate-500 mt-12">
        <i class="fa-solid fa-folder-open text-4xl mb-4"></i>
        <p class="text-lg">No projects available. Click “Add Project” to get started!</p>
    </div>
}

@await Html.PartialAsync("_AddProjectModal", new ProjectFormModel
{
    StartDate = DateTime.Today,
    EndDate = DateTime.Today.AddDays(30)
})